<<7d9ebe36-31df-4c90-b09e-65c9afedf3b1>>
* Accessing image files in the nextcloud
  :PROPERTIES:
  :CUSTOM_ID: accessing-image-files-in-the-nextcloud
  :END:
This notebook we will demonstrate how to download files from a nextcloud
server, how to process them locally and upload the results back to the
server.

If you work or study at Leipzig University you can sign up for an
account on such a server
[[https://www.urz.uni-leipzig.de/unsere-services/servicedetail/service/eigener-cloud-speicher-speicherwolke][here]].

<<558d6ae7-dead-4181-ae8b-bae3fa02cf64>>
#+begin_src python
from skimage.io import imread, imsave
from skimage.measure import label
import ipywidgets as widgets
import stackview

import nextcloud_client
#+end_src

<<040f6ba3-ad0e-4640-86f0-29e7e39390fc>>
** Login
   :PROPERTIES:
   :CUSTOM_ID: login
   :END:
After executing the next cell locally, you will see three input fields
where you can enter the server url, username and password.

[[file:login.png]]

<<005749f6-513f-442e-83bc-24ebc27e6458>>
#+begin_src python
server_widget = widgets.Text(value='https://speicherwolke.uni-leipzig.de', description='Server')
username_widget = widgets.Text(description='Username:')
password_widget = widgets.Password(description='Password')

widgets.VBox([server_widget, username_widget, password_widget])
#+end_src

#+begin_example
{"model_id":"4bcc4891e0d04e2c858df54a12b2978b","version_major":2,"version_minor":0}
#+end_example

<<b6818166-4d90-4572-a83c-4ffcc94766ff>>
*Do NOT hit Shift-Enter after entering username and password*

<<4d904fd9-acbe-4d9c-9b28-a1073bc128cc>>
#+begin_src python
if username_widget.value == '':
    raise RuntimeError('Enter username and password above')
#+end_src

<<daab6956-fa31-4660-be02-0dee8712e8dd>>
#+begin_src python
ncc = nextcloud_client.Client(server_widget.value)
ncc.login(username_widget.value, password_widget.value)
#+end_src

<<68f8cce2-5af0-4c12-b4de-99188e183427>>
#+begin_src python
# reset password
password_widget.value = ""
#+end_src

<<41a3a588-db89-42bd-83cf-cfde579fe45f>>
A typical error message is 401: Access denied. Check your username and
password.

** Browsing the remote server
   :PROPERTIES:
   :CUSTOM_ID: browsing-the-remote-server
   :END:
To see if the connection was successful, we can just list the files in a
given folder.

<<815f1c03-e403-459b-8635-759ff750a732>>
#+begin_src python
# enter a folder on the owncloud drive that exists. '/' is the root folder.
remote_folder = "/data/"

for f in ncc.list(remote_folder):
    print (f.path)
#+end_src

#+begin_example
/data/blobs.tif
#+end_example

<<c08c077f-7c76-40a3-97d2-a16f435cf8c4>>
** Retrieving a file
   :PROPERTIES:
   :CUSTOM_ID: retrieving-a-file
   :END:
We can download a file to a local directory.

<<9e989c43-684e-41b6-af53-68515cfc3be2>>
#+begin_src python
# enter the source file here
remote_source_file = '/data/blobs.tif'
# enter the destination
local_file = 'blobs.tif'

ncc.get_file(remote_path=remote_source_file, 
            local_file=local_file)
#+end_src

#+begin_example
True
#+end_example

<<abd6569b-d49e-40d7-89a9-2ce1e0e2745a>>
** Image processing
   :PROPERTIES:
   :CUSTOM_ID: image-processing
   :END:
As we downloaded the file, image processing works as usual.

<<c66d5f7a-9c7f-467c-ab23-2d2375d236dc>>
#+begin_src python
image = imread(local_file)
stackview.insight(image)
#+end_src

#+begin_example
StackViewNDArray([[ 40,  32,  24, ..., 216, 200, 200],
                  [ 56,  40,  24, ..., 232, 216, 216],
                  [ 64,  48,  24, ..., 240, 232, 232],
                  ...,
                  [ 72,  80,  80, ...,  48,  48,  48],
                  [ 80,  80,  80, ...,  48,  48,  48],
                  [ 96,  88,  80, ...,  48,  48,  48]], dtype=uint8)
#+end_example

<<54431d4f-e023-4b28-ba71-63631120c8c8>>
#+begin_src python
labels = label(image > image.max() / 2)
stackview.insight(labels)
#+end_src

#+begin_example
StackViewNDArray([[0, 0, 0, ..., 5, 5, 5],
                  [0, 0, 0, ..., 5, 5, 5],
                  [0, 0, 0, ..., 5, 5, 5],
                  ...,
                  [0, 0, 0, ..., 0, 0, 0],
                  [0, 0, 0, ..., 0, 0, 0],
                  [0, 0, 0, ..., 0, 0, 0]])
#+end_example

<<0d184952-da5e-4e1c-8325-a0f4655169ad>>
** Uploading results
   :PROPERTIES:
   :CUSTOM_ID: uploading-results
   :END:
Before uploading an image to the cloud we need to save it locally.

<<e564bd91-73e9-4fa4-abab-854f74bf4fc0>>
#+begin_src python
local_file_to_upload = "blobs_labels.tif"

imsave(local_file_to_upload, labels, check_contrast=False)
#+end_src

<<e8acac0f-9ce8-4266-9826-ac19b2c56721>>
We will upload the file to this folder:

<<810cd512-1570-4c1f-b552-77c700dc7794>>
#+begin_src python
remote_folder
#+end_src

#+begin_example
'/data/'
#+end_example

<<8fb1558f-6d98-4eff-8fe2-f955533e6459>>
#+begin_src python
ncc.put_file(remote_folder, local_file_to_upload)
#+end_src

#+begin_example
True
#+end_example

<<d851413a-c6d7-4e69-b997-0217da2c5122>>
Just to be sure, we check if the file arrived by printing out the files
in the folder again.

<<3e26590c-187e-4234-affa-d655285ec373>>
#+begin_src python
for f in ncc.list(remote_folder):
    print (f.path)
#+end_src

#+begin_example
/data/blobs.tif
/data/blobs_labels.tif
#+end_example

<<c0de2827-e958-40c3-bbb5-ed616b7d2f8c>>
** Logout
   :PROPERTIES:
   :CUSTOM_ID: logout
   :END:
When you're done, log out!

<<43eb402f-349e-40e0-b1e5-adc551ce8a56>>
#+begin_src python
ncc.logout()
#+end_src

#+begin_example
True
#+end_example
