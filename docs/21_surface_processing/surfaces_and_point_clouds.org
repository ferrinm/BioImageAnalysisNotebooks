<<da6d5a51-f8ac-4865-893e-10186189faa1>>
* Converting points and surfaces
  :PROPERTIES:
  :CUSTOM_ID: converting-points-and-surfaces
  :END:
In this notebook we will sample points from a surface and convert the
point cloud back into a surface.

<<2c16dfdc-32ff-43e9-a9df-56f0deecaf10>>
#+begin_src python
import napari_process_points_and_surfaces as nppas
import vedo
import napari
#+end_src

<<44ed305d-8236-450f-b69b-a1b4330b7efc>>
#+begin_src python
viewer = napari.Viewer(ndisplay=3)

def hide_all(viewer):
    for layer in viewer.layers:
        layer.visible = False
        
def show_all(viewer):
    for layer in viewer.layers:
        layer.visible = True
#+end_src

<<d3540068-17da-42cd-883c-8993f145de71>>
#+begin_src python
mesh = vedo.load("../../data/branchoid.ply")
surface = nppas.to_napari_surface_data(mesh)

surface_layer = viewer.add_surface(surface)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:3b15ae6438a8718776fd7b67a57853ff610622d0.png]]

<<53412e46-5743-4a00-b0e4-5d7d227d15db>>
** Creating point clouds
   :PROPERTIES:
   :CUSTOM_ID: creating-point-clouds
   :END:
We can create a point cloud from the surface. The points are located on
the surface and not inside the volume.

<<cb2b766c-cc80-469e-b464-4dd00b2ed371>>
#+begin_src python
point_cloud = nppas.sample_points_from_surface(surface, distance_fraction=0.01)
point_cloud
#+end_src

#+begin_example
array([[26. , 44. , 46.5],
       [26. , 43.5, 48. ],
       [26. , 43.5, 50. ],
       ...,
       [74.5, 55. , 52. ],
       [74.5, 56. , 49. ],
       [74.5, 56. , 51. ]], dtype=float32)
#+end_example

<<4ca2cb25-54fb-49ec-86d5-84ebfb7461a2>>
#+begin_src python
hide_all(viewer)

points_layer = viewer.add_points(point_cloud, size=1)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:c84756a21c451d862dda84874d92ab00a1f32279.png]]

<<22d38820-7f51-4326-ae4b-76290edab920>>
In case these are too many points, we can sample a smaller number of
points from them.

<<4b239fbd-e6e9-42c3-8e29-0fd61f4f4044>>
#+begin_src python
hide_all(viewer)
    
subsampled_points = nppas.subsample_points(point_cloud, distance_fraction=0.05)

viewer.add_points(subsampled_points, size=1)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:2dfffa01d1ce085f607a0a7692e8a8affd3ea4de.png]]

<<7cd60afd>>
** Converting points to surfaces
   :PROPERTIES:
   :CUSTOM_ID: converting-points-to-surfaces
   :END:
We can reconstruct surfaces from point clouds. Obviously, some
information loss might have happened depending on what we did to the
points.

<<4ef5621a-513e-4f11-9f9d-0d4b2a8ab3d0>>
#+begin_src python
hide_all(viewer)

reconstructed_surface = nppas.reconstruct_surface_from_pointcloud(
    subsampled_points, 
    number_of_sampling_voxels=15, 
    point_influence_radius=10)

viewer.add_surface(reconstructed_surface)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:7bee17220ba1eb498c926fcd813dd0bbd1657cdc.png]]

<<450de980-a6cb-45e0-8572-39ecaba4aa03>>
#+begin_src python
hide_all(viewer)

reconstructed_surface = nppas.reconstruct_surface_from_pointcloud(
    point_cloud, 
    number_of_sampling_voxels=15, 
    point_influence_radius=10)

viewer.add_surface(reconstructed_surface)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:0483ae483a9336ae925ef2621e6e66223386651b.png]]

<<242a7c20-0a5c-4f40-b187-0f919efe2b84>>
#+begin_src python
#+end_src
