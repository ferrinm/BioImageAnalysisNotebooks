<<ff11395c-5b0c-4df8-8b20-a5ab712d31ff>>
* Visualizing surfaces
  :PROPERTIES:
  :CUSTOM_ID: visualizing-surfaces
  :END:
In this notebook we create a surface mesh from a 3D dataset of a
Gastruloid. The used example data is derived from
[[https://zenodo.org/record/7603081#.Y94N4XbMJmN][AV Luque and JV
Veenvliet (2023)]] licensed
[[https://creativecommons.org/licenses/by/4.0/legalcode][CC-BY]]. See
the [[file:creating_surfaces.ipynb][creating_surfaces]] for how to
create the surface from raw imaging data.

We visualize the surface using napari-process-points-and-surfaces,
[[https://vedo.embl.es/][vedo]] and [[https://napari.org][napari]].

<<a43114eb-755f-485d-b602-4d0b6f5330da>>
#+begin_src python
import napari_process_points_and_surfaces as nppas

import vedo
import napari
#+end_src

<<8fb1ee00-5458-407b-addf-fc79297d9143>>
#+begin_src python
surface = nppas.gastruloid()
#+end_src

#+begin_example
The nppas gastruloid example is derived from AV Luque and JV Veenvliet (2023) which is licensed CC-BY (https://creativecommons.org/licenses/by/4.0/legalcode) and can be downloaded from here: https://zenodo.org/record/7603081
#+end_example

<<7affb339-e0a8-48d8-949c-f16083e0c154>>
The resulting object is visualized in Jupyter notebooks like this:

<<286341c1-8d10-4554-a709-68288eaa0f28>>
#+begin_src python
surface
#+end_src

#+begin_example
(array([[ 14.174363, 220.40599 , 224.08286 ],
        [ 13.983076, 208.15877 , 220.32153 ],
        [ 14.819012, 219.06023 , 229.4558  ],
        ...,
        [112.18208 , 356.98364 , 430.36832 ],
        [112.3784  , 360.45856 , 421.8425  ],
        [112.865425, 352.2561  , 422.1735  ]], dtype=float32),
 array([[   0,    1,    2],
        [   3,    4,    5],
        [   6,    4,    7],
        ...,
        [3318, 3317, 3316],
        [3316, 3323, 3318],
        [3318, 3323, 3319]], dtype=int64))
#+end_example

<<53b72e71-fdf2-43bc-a3ef-cf90adb6442e>>
#+begin_src python
surface2 = nppas.add_quality(surface, nppas.Quality.SPHERE_FITTED_CURVATURE_HECTA_VOXEL)
surface2.azimuth = -90
surface2
#+end_src

#+begin_example
(array([[ 14.174363, 220.40599 , 224.08286 ],
        [ 13.983076, 208.15877 , 220.32153 ],
        [ 14.819012, 219.06023 , 229.4558  ],
        ...,
        [112.18208 , 356.98364 , 430.36832 ],
        [112.3784  , 360.45856 , 421.8425  ],
        [112.865425, 352.2561  , 422.1735  ]], dtype=float32),
 array([[   0,    1,    2],
        [   3,    4,    5],
        [   6,    4,    7],
        ...,
        [3318, 3317, 3316],
        [3316, 3323, 3318],
        [3318, 3323, 3319]], dtype=int64),
 array([0.00025724, 0.00025043, 0.0002532 , ..., 0.00016264, 0.00015164,
        0.00016288]))
#+end_example

<<c644b004-efdc-4019-9337-ddc650d97633>>
** Visualizing surfaces using napari-process-points-and-surfaces
=nazimuths.show()=
   :PROPERTIES:
   :CUSTOM_ID: visualizing-surfaces-using-napari-process-points-and-surfaces-nazimuthsshow
   :END:
You can tune the visualization using =nppas.show()=.

<<c4745fae-04ab-43f6-8c1c-6089f8637eac>>
#+begin_src python
nppas.show(surface, zoom=1.5, azimuth=90, elevation=45)
#+end_src

[[file:4089966275d0da180a62c796234cf41d2b8bcdd3.png]]

<<ee2bfe31-cc30-4ebe-89bd-4c37a72aad86>>
** Visualizing surfaces using vedo
   :PROPERTIES:
   :CUSTOM_ID: visualizing-surfaces-using-vedo
   :END:
... using
[[https://vedo.embl.es/autodocs/content/vedo/vedo/plotter.html#Plotter][vedo
Plotter]].

<<808aaf1c-4e03-4d66-aa9e-64431a4526f3>>
#+begin_src python
from vedo import Plotter

plt = Plotter()
mesh = nppas.to_vedo_mesh(surface)

plt.show(mesh, zoom=1, azimuth=45)
#+end_src

[[file:5b7f68f4c5b9d928d2079ebe850a61bc737f8e77.png]]

<<89450429-4f01-4921-aaa5-881e288e8465>>
** Visualizing surfaces using napari
   :PROPERTIES:
   :CUSTOM_ID: visualizing-surfaces-using-napari
   :END:

<<01bdb1bc-5541-41d7-a38f-d1d2625fdd33>>
#+begin_src python
import napari
viewer = napari.Viewer(ndisplay=3)

viewer.add_surface(surface)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:b8e918722bb95c6e7e4ee31eb6bdc3f008d0faa5.png]]

<<2c40840a-d892-4071-9286-752924170582>>
#+begin_src python
viewer.add_surface(surface2, colormap=surface2.cmap)

napari.utils.nbscreenshot(viewer)
#+end_src

[[file:2748fd99ae39995ec6805f6b43b04a6e50936ddf.png]]

<<255319b4-da7a-4cae-bc58-a4431f5ca993>>
#+begin_src python
#+end_src
