<<a3779d27-e253-458a-ab7a-5408dc9545f2>>
* Processing images using SimpleITK
  :PROPERTIES:
  :CUSTOM_ID: processing-images-using-simpleitk
  :END:
See also

- [[https://github.com/InsightSoftwareConsortium/SimpleITK-Notebooks][SimpleITK
  notebooks]]

<<36ad16e3>>
#+begin_src python
import numpy as np
from skimage.io import imread
import napari_simpleitk_image_processing as nsitk
import stackview
#+end_src

<<7e1c47f4>>
#+begin_src python
blobs = imread('https://samples.fiji.sc/blobs.png')
stackview.insight(blobs)
#+end_src

#+begin_example
StackViewNDArray([[ 40,  32,  24, ..., 216, 200, 200],
                  [ 56,  40,  24, ..., 232, 216, 216],
                  [ 64,  48,  24, ..., 240, 232, 232],
                  ...,
                  [ 72,  80,  80, ...,  48,  48,  48],
                  [ 80,  80,  80, ...,  48,  48,  48],
                  [ 96,  88,  80, ...,  48,  48,  48]], dtype=uint8)
#+end_example

<<8dec9a63>>
** Median filter
   :PROPERTIES:
   :CUSTOM_ID: median-filter
   :END:

<<766b55d8>>
#+begin_src python
nsitk.median_filter(blobs, 5, 5, 0)
#+end_src

#+begin_example
StackViewNDArray([[ 40,  40,  32, ..., 232, 232, 232],
                  [ 40,  40,  32, ..., 232, 232, 232],
                  [ 40,  40,  32, ..., 232, 232, 232],
                  ...,
                  [ 72,  72,  72, ...,  48,  48,  48],
                  [ 72,  72,  72, ...,  48,  48,  48],
                  [ 80,  72,  72, ...,  48,  48,  48]], dtype=uint8)
#+end_example

<<76f76984>>
* Gaussian blur
  :PROPERTIES:
  :CUSTOM_ID: gaussian-blur
  :END:

<<68b7f41b>>
#+begin_src python
nsitk.gaussian_blur(blobs, 10, 10, 0)
#+end_src

#+begin_example
StackViewNDArray([[ 36,  34,  33, ..., 225, 221, 218],
                  [ 37,  35,  34, ..., 227, 224, 221],
                  [ 37,  36,  35, ..., 229, 227, 224],
                  ...,
                  [ 74,  73,  71, ...,  47,  47,  47],
                  [ 77,  76,  74, ...,  47,  47,  47],
                  [ 80,  78,  76, ...,  47,  47,  47]], dtype=uint8)
#+end_example

<<cd221f10>>
** Edge enhancement / edge detection
   :PROPERTIES:
   :CUSTOM_ID: edge-enhancement--edge-detection
   :END:

<<056b6ef8>>
#+begin_src python
nsitk.laplacian_filter(blobs)
#+end_src

#+begin_example
StackViewNDArray([[  8.,   8.,   8., ...,  16.,  32.,  16.],
                  [-24.,   0.,  16., ..., -16.,  16.,   0.],
                  [-48., -24.,  40., ..., -16.,  -8., -16.],
                  ...,
                  [  8., -16.,  -8., ...,   0.,   0.,   0.],
                  [  8.,   8.,   0., ...,   0.,   0.,   0.],
                  [-24.,  -8.,   8., ...,   0.,   0.,   0.]])
#+end_example

<<6dcabad6>>
#+begin_src python
nsitk.laplacian_of_gaussian_filter(blobs, sigma=20)
#+end_src

#+begin_example
StackViewNDArray([[ 0.04143169,  0.03739895,  0.03302537, ...,
                   -0.13799646, -0.14374909, -0.14888938],
                  [ 0.03790184,  0.03396917,  0.02970707, ...,
                   -0.1393942 , -0.14508256, -0.15016647],
                  [ 0.03421452,  0.03039436,  0.02625637, ...,
                   -0.14042452, -0.14603451, -0.15104878],
                  ...,
                  [ 0.03438915,  0.03680093,  0.03920772, ...,
                    0.01475119,  0.02091116,  0.02687691],
                  [ 0.03811312,  0.04037919,  0.04263743, ...,
                    0.01406322,  0.02019631,  0.02613378],
                  [ 0.04134034,  0.04346982,  0.04558875, ...,
                    0.01325303,  0.01936782,  0.02528556]], dtype=float32)
#+end_example

<<74d2b06a>>
#+begin_src python
nsitk.sobel(blobs)
#+end_src

#+begin_example
StackViewNDArray([[ 68.81860214,  86.16263691,  40.79215611, ...,
                   132.42356286,  90.50966799,  64.        ],
                  [104.30723848, 132.42356286,  60.92618485, ...,
                   124.45079349, 132.42356286, 128.        ],
                  [ 67.88225099, 120.26637103,  57.68882041, ...,
                    68.81860214,  68.81860214,  64.        ],
                  ...,
                  [ 60.92618485,  46.64761516,  32.        , ...,
                     0.        ,   0.        ,   0.        ],
                  [ 80.        ,  40.79215611,  11.3137085 , ...,
                     0.        ,   0.        ,   0.        ],
                  [ 60.92618485,  57.68882041,  25.29822128, ...,
                     0.        ,   0.        ,   0.        ]])
#+end_example

<<b1ddde24>>
#+begin_src python
nsitk.gradient_magnitude(blobs)
#+end_src

#+begin_example
StackViewNDArray([[ 8.944272,  8.944272,  4.      , ..., 17.888544,
                   11.313708,  8.      ],
                  [14.422205, 17.888544,  8.      , ..., 16.970562,
                   17.888544, 16.      ],
                  [11.313708, 20.      ,  8.944272, ...,  5.656854,
                    8.944272,  8.      ],
                  ...,
                  [ 8.944272,  5.656854,  4.      , ...,  0.      ,
                    0.      ,  0.      ],
                  [12.      ,  4.      ,  0.      , ...,  0.      ,
                    0.      ,  0.      ],
                  [ 8.944272,  8.944272,  4.      , ...,  0.      ,
                    0.      ,  0.      ]], dtype=float32)
#+end_example

<<bf8eeb75>>
#+begin_src python
nsitk.morphological_gradient(blobs)
#+end_src

#+begin_example
StackViewNDArray([[48, 48, 48, ..., 48, 48, 48],
                  [48, 48, 48, ..., 48, 48, 48],
                  [48, 48, 48, ..., 48, 48, 48],
                  ...,
                  [40, 40, 40, ..., 16, 16,  8],
                  [32, 40, 40, ..., 16,  8,  8],
                  [32, 32, 40, ...,  8,  0,  0]], dtype=uint8)
#+end_example

<<8cfbfc64>>
#+begin_src python
nsitk.standard_deviation_filter(blobs)
#+end_src

#+begin_example
StackViewNDArray([[12, 11, 11, ..., 17, 17, 17],
                  [12, 12, 11, ..., 16, 16, 16],
                  [12, 12, 11, ..., 15, 15, 15],
                  ...,
                  [13, 12, 12, ...,  3,  2,  2],
                  [12, 12, 12, ...,  2,  1,  1],
                  [12, 12, 12, ...,  1,  0,  0]], dtype=uint8)
#+end_example

<<32804dfe>>
#+begin_src python
nsitk.canny_edge_detection(blobs)
#+end_src

#+begin_example
StackViewNDArray([[0., 0., 0., ..., 0., 0., 0.],
                  [0., 0., 0., ..., 0., 0., 0.],
                  [0., 0., 0., ..., 0., 0., 0.],
                  ...,
                  [0., 0., 0., ..., 0., 0., 0.],
                  [0., 0., 0., ..., 0., 0., 0.],
                  [0., 0., 0., ..., 0., 0., 0.]])
#+end_example

<<0c396d66>>
** Denoising
   :PROPERTIES:
   :CUSTOM_ID: denoising
   :END:

<<a9082cb0>>
#+begin_src python
nsitk.bilateral_filter(blobs, radius=10)
#+end_src

#+begin_example
StackViewNDArray([[ 37,  36,  36, ..., 218, 215, 215],
                  [ 39,  37,  36, ..., 220, 218, 217],
                  [ 41,  39,  36, ..., 222, 220, 220],
                  ...,
                  [ 71,  71,  70, ...,  51,  50,  50],
                  [ 73,  72,  71, ...,  51,  50,  50],
                  [ 76,  74,  72, ...,  51,  50,  50]], dtype=uint8)
#+end_example

<<92f0086f>>
#+begin_src python
nsitk.binominal_blur_filter(blobs, repetitions=20)
#+end_src

#+begin_example
StackViewNDArray([[ 35.56551057,  35.44926425,  35.11150529, ...,
                   234.76304854, 233.30590651, 232.47789577],
                  [ 35.77709637,  35.66327957,  35.33025724, ...,
                   234.81736018, 233.39808796, 232.5916992 ],
                  [ 36.38108298,  36.27299886,  35.95061471, ...,
                   234.92220963, 233.60844849, 232.86229297],
                  ...,
                  [ 71.83095413,  71.56104291,  70.77635546, ...,
                    48.27590613,  48.27687207,  48.29621387],
                  [ 73.42920327,  73.14246398,  72.30886172, ...,
                    48.23916006,  48.20239439,  48.20279823],
                  [ 74.27138061,  73.97581503,  73.11661364, ...,
                    48.21797925,  48.16105336,  48.15146728]])
#+end_example

<<6da97f56>>
#+begin_src python
nsitk.curvature_flow_denoise(blobs, number_of_iterations=150)
#+end_src

#+begin_example
StackViewNDArray([[ 33.94403645,  33.72513409,  33.4730825 , ...,
                   234.73522629, 234.61940792, 234.26080718],
                  [ 33.76078454,  33.6233714 ,  33.46185751, ...,
                   234.61797296, 234.64955635, 234.61247859],
                  [ 33.59095341,  33.52604048,  33.43444125, ...,
                   234.40850075, 234.5806033 , 234.63231801],
                  ...,
                  [ 71.96102783,  71.21219893,  69.99962524, ...,
                    48.        ,  48.        ,  48.        ],
                  [ 74.26007076,  73.31680089,  71.78763889, ...,
                    48.        ,  48.        ,  48.        ],
                  [ 75.34714271,  74.3548973 ,  72.70641688, ...,
                    48.        ,  48.        ,  48.        ]])
#+end_example

<<9b3b21a1>>
** Deconvolution
   :PROPERTIES:
   :CUSTOM_ID: deconvolution
   :END:

<<ffe9d20a>>
#+begin_src python
kernel = np.zeros((15, 15))
kernel[7,7] = 1
kernel = nsitk.gaussian_blur(kernel, variance_x=3, variance_y=3)
kernel
#+end_src

#+begin_example
StackViewNDArray([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 2.07316370e-05,
                   7.40342327e-05, 2.18156257e-04, 5.10346748e-04,
                   8.98618592e-04, 1.10942581e-03, 8.98618592e-04,
                   5.10346748e-04, 2.18156257e-04, 7.40342327e-05,
                   2.07316370e-05, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 7.40342327e-05,
                   2.64381805e-04, 7.79052380e-04, 1.82248657e-03,
                   3.20903448e-03, 3.96184288e-03, 3.20903448e-03,
                   1.82248657e-03, 7.79052380e-04, 2.64381805e-04,
                   7.40342327e-05, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 2.18156257e-04,
                   7.79052380e-04, 2.29562927e-03, 5.37031092e-03,
                   9.45604388e-03, 1.16743402e-02, 9.45604388e-03,
                   5.37031092e-03, 2.29562927e-03, 7.79052380e-04,
                   2.18156257e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 5.10346748e-04,
                   1.82248657e-03, 5.37031092e-03, 1.25631084e-02,
                   2.21211222e-02, 2.73105232e-02, 2.21211222e-02,
                   1.25631084e-02, 5.37031092e-03, 1.82248657e-03,
                   5.10346748e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 8.98618592e-04,
                   3.20903448e-03, 9.45604388e-03, 2.21211222e-02,
                   3.89508737e-02, 4.80883713e-02, 3.89508737e-02,
                   2.21211222e-02, 9.45604388e-03, 3.20903448e-03,
                   8.98618592e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 1.10942581e-03,
                   3.96184288e-03, 1.16743402e-02, 2.73105232e-02,
                   4.80883713e-02, 5.93694372e-02, 4.80883713e-02,
                   2.73105232e-02, 1.16743402e-02, 3.96184288e-03,
                   1.10942581e-03, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 8.98618592e-04,
                   3.20903448e-03, 9.45604388e-03, 2.21211222e-02,
                   3.89508737e-02, 4.80883713e-02, 3.89508737e-02,
                   2.21211222e-02, 9.45604388e-03, 3.20903448e-03,
                   8.98618592e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 5.10346748e-04,
                   1.82248657e-03, 5.37031092e-03, 1.25631084e-02,
                   2.21211222e-02, 2.73105232e-02, 2.21211222e-02,
                   1.25631084e-02, 5.37031092e-03, 1.82248657e-03,
                   5.10346748e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 2.18156257e-04,
                   7.79052380e-04, 2.29562927e-03, 5.37031092e-03,
                   9.45604388e-03, 1.16743402e-02, 9.45604388e-03,
                   5.37031092e-03, 2.29562927e-03, 7.79052380e-04,
                   2.18156257e-04, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 7.40342327e-05,
                   2.64381805e-04, 7.79052380e-04, 1.82248657e-03,
                   3.20903448e-03, 3.96184288e-03, 3.20903448e-03,
                   1.82248657e-03, 7.79052380e-04, 2.64381805e-04,
                   7.40342327e-05, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 2.07316370e-05,
                   7.40342327e-05, 2.18156257e-04, 5.10346748e-04,
                   8.98618592e-04, 1.10942581e-03, 8.98618592e-04,
                   5.10346748e-04, 2.18156257e-04, 7.40342327e-05,
                   2.07316370e-05, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
                  [0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                   0.00000000e+00, 0.00000000e+00, 0.00000000e+00]])
#+end_example

<<f92e6cde>>
#+begin_src python
nsitk.richardson_lucy_deconvolution(blobs, kernel)
#+end_src

#+begin_example
StackViewNDArray([[ 43.83245666,  26.81790698,  14.91160491, ...,
                   211.35817734, 188.64286128, 185.95219472],
                  [ 76.59179201,  38.84667003,  16.36094758, ...,
                   234.20469078, 212.65568984, 210.19295382],
                  [ 83.5561574 ,  47.00775022,  18.09241321, ...,
                   249.58045699, 237.62628193, 235.30606438],
                  ...,
                  [ 66.97847756,  80.74987515,  85.84440382, ...,
                    47.1919825 ,  46.56816509,  46.60000493],
                  [ 81.8243559 ,  84.54477811,  85.95353275, ...,
                    46.63096005,  46.19254804,  46.52328468],
                  [106.55526755,  95.76158211,  84.16270399, ...,
                    46.14923815,  45.65454142,  46.05176431]])
#+end_example

<<b3643ac9>>
#+begin_src python
nsitk.wiener_deconvolution(blobs, kernel)
#+end_src

#+begin_example
StackViewNDArray([[-3.19548839e+02,  2.04451487e+02,  1.04841780e+02,
                   ..., -1.12294425e+02, -4.56854602e+02,
                    7.82500372e+01],
                  [-2.84934726e+02,  2.16582708e+02,  5.93714472e+01,
                   ...,  7.50198987e+01, -2.87164252e+01,
                    5.82257909e+02],
                  [-1.37726173e+02,  3.80843414e+02,  7.34047268e+01,
                   ...,  4.05168866e+02,  3.61567771e+02,
                    1.07458198e+03],
                  ...,
                  [ 2.11035315e+02,  7.03694564e+01,  1.14019646e+02,
                   ..., -1.72707341e+02, -1.92517887e+02,
                   -3.47929656e+02],
                  [ 1.66002803e+02,  2.71788514e+01, -9.87918137e-02,
                   ...,  2.12195907e+02,  1.41878134e+02,
                    9.40330836e+00],
                  [ 1.85390826e+02,  2.08516391e+01,  4.54073732e+01,
                   ...,  2.37085245e+02,  3.10593709e+02,
                    2.49402887e+02]])
#+end_example

<<1e6d2f4f>>
#+begin_src python
nsitk.tikhonov_deconvolution(blobs, kernel, regularization_constant=0.5)
#+end_src

#+begin_example
StackViewNDArray([[ 29.53713205,  23.79447052,  17.99095403, ...,
                   146.64840885, 139.69083518, 135.69531842],
                  [ 32.43096945,  26.24976008,  20.3389355 , ...,
                   152.07760507, 146.36281506, 143.01025057],
                  [ 31.57203508,  26.67702692,  22.44295313, ...,
                   157.34034337, 152.8851905 , 150.20066893],
                  ...,
                  [ 50.09552598,  51.33430291,  51.75396249, ...,
                    31.93115703,  31.8491745 ,  31.79274509],
                  [ 55.15120207,  54.90066768,  53.94418082, ...,
                    32.05843939,  32.00518694,  31.97868156],
                  [ 59.74229131,  57.81152308,  55.27038689, ...,
                    32.30391371,  32.27966139,  32.27369132]])
#+end_example

<<641cd5eb>>
** Background / foreground removal
   :PROPERTIES:
   :CUSTOM_ID: background--foreground-removal
   :END:

<<6394778f>>
#+begin_src python
nsitk.white_top_hat(blobs)
#+end_src

#+begin_example
StackViewNDArray([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
                  [16.,  8.,  0., ..., 32., 16.,  0.],
                  [24., 24.,  8., ..., 40., 32.,  0.],
                  ...,
                  [ 0.,  8.,  8., ...,  0.,  0.,  0.],
                  [ 0.,  0.,  8., ...,  0.,  0.,  0.],
                  [ 0.,  0.,  0., ...,  0.,  0.,  0.]])
#+end_example

<<ed2c0e07>>
#+begin_src python
nsitk.black_top_hat(blobs)
#+end_src

#+begin_example
StackViewNDArray([[ 0.,  0.,  8., ...,  0.,  0.,  0.],
                  [ 0.,  0.,  8., ...,  0.,  0.,  0.],
                  [ 0.,  8., 16., ...,  0.,  0.,  0.],
                  ...,
                  [ 0.,  0.,  0., ...,  0.,  0.,  0.],
                  [ 0.,  0.,  0., ...,  0.,  0.,  0.],
                  [ 0.,  0.,  0., ...,  0.,  0.,  0.]])
#+end_example

<<61fb6a19>>
#+begin_src python
nsitk.h_maxima(blobs, height=100)
#+end_src

#+begin_example
StackViewNDArray([[ 32,  32,  24, ..., 148, 148, 148],
                  [ 32,  32,  24, ..., 148, 148, 148],
                  [ 32,  32,  24, ..., 148, 148, 148],
                  ...,
                  [ 56,  56,  56, ...,  48,  48,  48],
                  [ 56,  56,  56, ...,  48,  48,  48],
                  [ 56,  56,  56, ...,  48,  48,  48]], dtype=uint8)
#+end_example

<<392a5397>>
#+begin_src python
nsitk.h_minima(blobs, height=100)
#+end_src

#+begin_example
StackViewNDArray([[108, 108, 108, ..., 232, 232, 232],
                  [108, 108, 108, ..., 232, 232, 232],
                  [108, 108, 108, ..., 240, 232, 232],
                  ...,
                  [108, 108, 108, ..., 108, 108, 108],
                  [108, 108, 108, ..., 108, 108, 108],
                  [108, 108, 108, ..., 108, 108, 108]], dtype=uint8)
#+end_example

<<116ec5ed>>
** Other filters
   :PROPERTIES:
   :CUSTOM_ID: other-filters
   :END:

<<12005b26>>
#+begin_src python
rescaled = nsitk.rescale_intensity(blobs)

print(rescaled.max())

rescaled
#+end_src

#+begin_example
0.9999999999999999
#+end_example

#+begin_example
StackViewNDArray([[0.13333333, 0.1       , 0.06666667, ..., 0.86666667,
                   0.8       , 0.8       ],
                  [0.2       , 0.13333333, 0.06666667, ..., 0.93333333,
                   0.86666667, 0.86666667],
                  [0.23333333, 0.16666667, 0.06666667, ..., 0.96666667,
                   0.93333333, 0.93333333],
                  ...,
                  [0.26666667, 0.3       , 0.3       , ..., 0.16666667,
                   0.16666667, 0.16666667],
                  [0.3       , 0.3       , 0.3       , ..., 0.16666667,
                   0.16666667, 0.16666667],
                  [0.36666667, 0.33333333, 0.3       , ..., 0.16666667,
                   0.16666667, 0.16666667]])
#+end_example

<<e996cc45>>
#+begin_src python
nsitk.adaptive_histogram_equalization(blobs, radius_x=5, radius_y=5)
#+end_src

#+begin_example
StackViewNDArray([[119.50977373,  87.56177064,  55.30237745, ...,
                    96.89270529,  79.79918119,  80.82263557],
                  [161.23418447, 115.59380895,  53.4020973 , ...,
                   132.19622123,  97.83247995,  99.80753282],
                  [173.72644923, 139.67014505,  51.82205108, ...,
                   175.00137272, 138.17574745, 141.85426313],
                  ...,
                  [124.81910604, 158.90641677, 161.15876581, ...,
                   104.79459468, 103.09188644, 102.94053513],
                  [153.06771667, 156.20188299, 158.7294625 , ...,
                   103.99999856, 101.92431687, 101.5783686 ],
                  [182.90615321, 173.21626885, 155.61706799, ...,
                   106.11892293, 103.99999837, 103.99999746]])
#+end_example

<<da2dfba6>>
#+begin_src python
nsitk.invert_intensity(blobs)
#+end_src

#+begin_example
StackViewNDArray([[215, 223, 231, ...,  39,  55,  55],
                  [199, 215, 231, ...,  23,  39,  39],
                  [191, 207, 231, ...,  15,  23,  23],
                  ...,
                  [183, 175, 175, ..., 207, 207, 207],
                  [175, 175, 175, ..., 207, 207, 207],
                  [159, 167, 175, ..., 207, 207, 207]], dtype=uint8)
#+end_example

<<40d2f561-d6a2-49b9-8fe6-489550617f1c>>
#+begin_src python
#+end_src
